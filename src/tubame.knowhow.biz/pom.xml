<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>tubame-knowhow-biz</artifactId>
	<packaging>bundle</packaging>

	<parent>
		<groupId>tubame</groupId>
		<artifactId>tubame-parent</artifactId>
		<version>1.1.2-SNAPSHOT</version>
	</parent>

	<properties>
		<xalan.version>2.7.1</xalan.version>
		<docbook.xsl.release>docbook-xsl-1.78.1</docbook.xsl.release>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
		</dependency>


		<!-- use xslt 3.0 processor for convert asciidoc -->
		<dependency>
			<groupId>net.sf.saxon</groupId>
			<artifactId>Saxon-HE</artifactId>
			<version>9.7.0-18</version>
		</dependency>

		<!-- use xalan for javax.xml.transform defined: services/javax.xml.transform.TransformerFactory: 
			org.apache.xalan.processor.TransformerFactoryImpl important: When the pom 
			definition of xalan is defined before saxon ,saxon is used to implement javax.xml.transform. 
			In this case, the conversion process using xsl with javax.xml.transform API 
			will not work -->
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
			<version>${xalan.version}</version>
		</dependency>

		<dependency>
			<groupId>org.asciidoctor</groupId>
			<artifactId>asciidoctorj</artifactId>
			<version>1.5.4</version>
		</dependency>

		<dependency>
			<groupId>org.jruby</groupId>
			<artifactId>jruby-complete</artifactId>
			<version>1.7.21</version>
			<scope>compile</scope>
		</dependency>



		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.17.1-GA</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>1.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.5</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>

		<!-- "M2E plugin execution not covered" error avoidance -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${project.build.java.version}</source>
					<target>${project.build.java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.4.0</version>
				<extensions>true</extensions>
				<configuration>
					<obrRepository>NONE</obrRepository>
					<manifestLocation>META-INF</manifestLocation>
					<instructions>
						<Embed-Dependency>*;scope=compile|runtime;inline=true;artifactId=!slf4j-api</Embed-Dependency>
						<Embed-Directory>lib</Embed-Directory>
						<Embed-Transitive>true</Embed-Transitive>
						<Import-Package>*</Import-Package>
						<Export-Package>!org.slf4j.*,*</Export-Package>
						<Bundle-ClassPath>.,{maven-dependencies}</Bundle-ClassPath>
						<Include-Resource>{maven-resources}</Include-Resource>
					</instructions>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.googlecode.maven-download-plugin</groupId>
				<artifactId>download-maven-plugin</artifactId>
				<version>1.2.0</version>
				<executions>
					<execution>
						<id>install-docbook-xsl</id>
						<phase>install</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>http://sourceforge.net/projects/docbook/files/docbook-xsl/1.78.1/${docbook.xsl.release}.zip/download</url>
							<unpack>true</unpack>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<outputFileName>${docbook.xsl.release}.zip</outputFileName>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>generate-sources</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<property name="compile_classpath" refid="maven.compile.classpath" />
								<property name="runtime_classpath" refid="maven.runtime.classpath" />
								<property name="test_classpath" refid="maven.test.classpath" />
								<property name="plugin_classpath" refid="maven.plugin.classpath" />
								<ant antfile="${basedir}/build_portability_knowhow.xml"
									target="generate" />
								<ant antfile="${basedir}/build_search_module.xml" target="generate" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>

					<execution>
						<id>install</id>
						<phase>install</phase>
						<configuration>
							<target>
								<property name="knowhow_ui_eclipse_pj_path" value="${basedir}/../tubame.knowhow" />
								<property name="portability_ui_eclipse_pj_path" value="${basedir}/../tubame.portability" />
								<copy
									file="${project.build.directory}/${docbook.xsl.release}/extensions/xalan27.jar"
									tofile="${knowhow_ui_eclipse_pj_path}/lib/xalan27.jar"
									overwrite="true" />

								<copy
									file="${basedir}/target/${project.artifactId}-${project.version}.jar"
									tofile="${knowhow_ui_eclipse_pj_path}/lib/${project.artifactId}-${project.version}.jar"
									overwrite="true" />
								<copy
									file="${basedir}/target/${project.artifactId}-${project.version}.jar"
									tofile="${portability_ui_eclipse_pj_path}/lib/${project.artifactId}-${project.version}.jar"
									overwrite="true" />

							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>
